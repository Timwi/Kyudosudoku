//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KyudosudokuWebsite {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("KyudosudokuWebsite.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .controls {
        ///    font-size: 18pt;
        ///    margin: .5cm 0;
        ///}
        ///
        ///#find-form label, #find-form button, #find-form input, #find-form select {
        ///    padding: .1cm .4cm;
        ///    margin: 0 .25cm;
        ///    border-radius: .3cm;
        ///    border: 2px solid hsl(220, 50%, 75%);
        ///    background: transparent;
        ///    font: inherit;
        ///    font-size: 18pt;
        ///    cursor: pointer;
        ///}
        ///
        ///    #find-form input[type=&quot;radio&quot;] {
        ///        display: none;
        ///    }
        ///
        ///    #find-form input[type=&quot;number&quot;] {
        ///        width: 3cm;
        ///        padding: .1cm .2cm;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FindCss {
            get {
                return ResourceManager.GetString("FindCss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to window.addEventListener(&apos;DOMContentLoaded&apos;, function()
        ///{
        ///    function handler(fnc)
        ///    {
        ///        return function(ev)
        ///        {
        ///            fnc(ev);
        ///            ev.stopPropagation();
        ///            ev.preventDefault();
        ///            return false;
        ///        };
        ///    }
        ///
        ///    let loadedCriteria = JSON.parse(localStorage.getItem(&apos;criteria&apos;));
        ///
        ///    let form = document.getElementById(&apos;find-form&apos;);
        ///    let constraints = JSON.parse(form.dataset.constraints);
        ///    let curSort = (loadedCriteria &amp;&amp; loadedCriteria [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FindJs {
            get {
                return ResourceManager.GetString("FindJs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @font-face {
        ///    font-family: Bitter;
        ///    src: url(&apos;data:font/ttf;base64,AAEAAAAUAQAABABAR0RFRtue3BEAAa9YAAAEFEdQT1Op5WWkAAGzbAABYxhHU1VCC2FKsQADFoQAACaoSFZBUuyArIQAAz0sAAANK09TLzKDxleSAAFiVAAAAGBTVEFU+OrV2gADSlgAAAC4YXZhcsP14AEAA0uQAAAAMmNtYXCtiSpuAAFitAAACrZmdmFyj/t5uAADSxAAAAB+Z2FzcAAAABAAAa9QAAAACGdseWYUqCs5AAABTAABPfhndmFyI3CPbwADS8QAARP4aGVhZBjbbb0AAUrsAAAANmhoZWEHzAgWAAFiMAAAACRobXR4toItTAABSyQAABcMbG9jYT39jIEAAT9kAAALiG1heHAF1wDNAAE/RAAAACBuYW1lEnYlogABbXQAAAdMcG9zdBOjxhQAAXTAAAA6jXByZXBoBoyFAAFtb [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GeneralCss {
            get {
                return ResourceManager.GetString("GeneralCss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Invalid {
            get {
                object obj = ResourceManager.GetObject("Invalid", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Logo {
            get {
                object obj = ResourceManager.GetObject("Logo", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to h1 {
        ///    margin: 0 !important;
        ///}
        ///
        ///.profile-container {
        ///    display: grid;
        ///    grid-template-columns: 1fr auto;
        ///}
        ///
        ///    .profile-container &gt; .chart-container {
        ///        display: grid;
        ///        grid-template-columns: 1fr auto 1fr;
        ///        grid-template-rows: auto auto;
        ///        background-color: hsl(220, 70%, 80%);
        ///        text-align: center;
        ///        padding-top: .5em;
        ///    }
        ///
        ///        .profile-container &gt; .chart-container &gt; h1 {
        ///            display: flex;
        ///            justify-content: center;
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ProfileCss {
            get {
                return ResourceManager.GetString("ProfileCss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string ProfileJs {
            get {
                return ResourceManager.GetString("ProfileJs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to body.is-puzzle {
        ///	overflow: hidden;
        ///}
        ///
        ///	body.is-puzzle div.warning {
        ///		border-left: none;
        ///		border-right: none;
        ///		padding: .2cm .4cm;
        ///		font-size: 12pt;
        ///	}
        ///
        ///.puzzle {
        ///	outline: none;
        ///	touch-action: none;
        ///}
        ///
        ///	.puzzle svg {
        ///		user-select: none;
        ///		margin: 0 auto;
        ///		display: block;
        ///	}
        ///
        ///		.puzzle svg .solve-glow {
        ///			visibility: hidden;
        ///		}
        ///
        ///		.puzzle svg * {
        ///			pointer-events: none;
        ///			touch-action: none;
        ///		}
        ///
        ///		.puzzle svg .clickable {
        ///			pointer-events: all;
        ///		}
        ///
        ///		.puzzle s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PuzzleCss {
            get {
                return ResourceManager.GetString("PuzzleCss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to window.onload = (function()
        ///{
        ///	function remoteLog(msg)
        ///	{
        ///		//let req = new XMLHttpRequest();
        ///		//req.open(&apos;POST&apos;, &apos;/remote-log&apos;, true);
        ///		//req.setRequestHeader(&apos;Content-Type&apos;, &apos;application/x-www-form-urlencoded&apos;);
        ///		//req.send(`msg=${encodeURIComponent(msg)}`);
        ///	}
        ///
        ///	function inRange(x) { return x &gt;= 0 &amp;&amp; x &lt; 9; }
        ///	function dx(dir) { return dir === &apos;Left&apos; ? -1 : dir === &apos;Right&apos; ? 1 : 0; }
        ///	function dy(dir) { return dir === &apos;Up&apos; ? -1 : dir === &apos;Down&apos; ? 1 : 0; }
        ///	function Adjacent(cell)
        ///	{
        ///		l [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PuzzleJs {
            get {
                return ResourceManager.GetString("PuzzleJs", resourceCulture);
            }
        }
    }
}
